spring.kafka.bootstrap-servers=localhost:9091
# For spring cloud stream
spring.cloud.function.definition=PageEventSupplier;PageEventFunction;KStreamFunction;PageEventConcumer
spring.cloud.stream.bindings.PageEventConcumer-in-0.destination=topicie017
spring.cloud.stream.bindings.PageEventSupplier-out-0.destination=topicie017
spring.cloud.stream.bindings.PageEventFunction-in-0.destination=InputAndOutput
spring.cloud.stream.bindings.PageEventFunction-out-0.destination=topicie017
spring.cloud.stream.bindings.KStreamFunction-in-0.destination=TestTopic
spring.cloud.stream.bindings.KStreamFunction-out-0.destination=TestTopic2
# For spring kafka
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#Pour specifier le type de message lorsque je produit ce message qui est dans la classe ObjectRestController
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#Pour specifier le type de message lorsque je consomme ce message qui est dans la classe ServiceForKafka
#On peut configurer la deserialization dans notre classe sans besoin de faire ça dans (application.proprties),
# et ce cas est mieux dans le cas de traitement de beaucoup des objets.
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer